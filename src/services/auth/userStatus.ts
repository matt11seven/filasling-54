
import { query } from "@/integrations/postgres/client";

/**
 * Verifica se um usu√°rio est√° ativo
 */
export const checkUserActive = async (email: string): Promise<{ isActive: boolean, exists: boolean }> => {
  try {
    console.log(`üìä Verificando status do usu√°rio: "${email}"`);
    
    // Verifica√ß√£o especial para o usu√°rio master
    if (email.toLowerCase() === 'matt@slingbr.com') {
      console.log("‚úÖ Usu√°rio master detectado na verifica√ß√£o de status");
      return { isActive: true, exists: true };
    }
    
    // Buscar o usu√°rio pelo email (que √© o campo usuario na tabela login)
    const result = await query(
      "SELECT ativo FROM login WHERE usuario = $1",
      [email]
    );

    console.log(`üìä Consulta de status - linhas encontradas: ${result.rows ? result.rows.length : 0}`);

    // Se n√£o encontrou o usu√°rio
    if (!result.rows || result.rows.length === 0) {
      console.log(`‚ùå Status: Usu√°rio "${email}" n√£o encontrado no banco`);
      return { isActive: false, exists: false };
    }

    // Verificamos se o resultado tem a propriedade esperada
    const userRow = result.rows[0];
    
    if (!('ativo' in userRow)) {
      console.error("‚ùå Status: Resultado da consulta n√£o cont√©m a propriedade 'ativo':", userRow);
      return { isActive: false, exists: true };
    }

    // Retorna se o usu√°rio est√° ativo ou n√£o
    const isActive = !!userRow.ativo;
    console.log(`üìä Status do usu√°rio "${email}": ${isActive ? '‚úÖ ATIVO' : '‚ùå INATIVO'}`);
    
    return { 
      isActive: isActive, 
      exists: true 
    };
  } catch (error) {
    console.error("üö® Erro ao verificar status do usu√°rio:", error);
    return { isActive: false, exists: false };
  }
};
